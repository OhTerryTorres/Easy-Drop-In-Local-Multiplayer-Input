<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha =  0;
target      = -1;

obj = o_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset room and respawn player

draw_set_alpha(image_alpha);
draw_rectangle_colour(view_xview[0], view_yview[0], view_xview[0] + 640, view_yview[0] + 360, c_black, make_color_rgb(20, 0, 48), make_color_rgb(20, 0, 48), make_color_rgb(20, 0, 48), false);
draw_set_alpha(1.0);

image_alpha += 0.05;

/*
// Leaderboard
if (room == rmBoss0 || room == rmBoss1 || room == rmBoss2Edit)
{
    if (instance_exists(oBoss0) || instance_exists(oBoss1) || instance_exists(oBoss2))
    {
        var currTime = get_timer();
        oLeaderboard.StartingTimeLevel = currTime;
        oLeaderboard.PauseOffsetTimeLevel = 0;
    }
}
else
{
    var currTime = get_timer();
    oLeaderboard.StartingTimeLevel = currTime;
    oLeaderboard.PauseOffsetTimeLevel = 0;
}
*/

// Destroy
if (image_alpha &gt;= 1) {
    instance_create(0, 0, o_fxFadeIn);
    
    // Player
    instance_create(xx, yy, obj);
    
    /*
    
    //////// BELOW IS AN INCREDIBLY HACKY WAY TO RESET OBJECTS WHEN THE ROOM *FAKE RESTARTS* //////// 
    
    // Boss stuff
    with (oGeyser)
        instance_destroy();
        
    with (oBoss0) {
        x          = xstart;
        y          = ystart;
        
        cx         = 0;
        cy         = 0;
        vx         = 0;
        vy         = 0;
        
        init       = false;
        stateInit  = false;
         
        state      = FALLING;
        
        hp         = 4;
        canGetHurt = true;
        toggle     = true;
        
        alarm[0]   = -1;
        alarm[1]   = -1;
        alarm[2]   = -1;
        alarm[3]   = -1;
    }
    
    with (oDebris)
        instance_destroy();
        
    with (oBoss1) {
        x          = xstart;
        y          = ystart;
        
        cx         = 0;
        cy         = 0;
        vx         = 0;
        vy         = 0;
        
        init       = false;
        stateInit  = false;
        delay      = false;
         
        state      = INIT;
        
        hp         = 4;
        canGetHurt = true;
        toggle     = true;
        
        alarm[0]   = -1;
        alarm[1]   = -1;
        alarm[2]   = -1;
        alarm[3]   = -1; 
        alarm[4]   = -1;
        alarm[5]   = -1;   
    }
    
    with (oBoss2) {
        x          = xstart;
        y          = ystart;
        
        cx         = 0;
        cy         = 0;
        vx         = 0;
        vy         = 0;
        
        init       = false;
        stateInit  = false;
         
        state      = INIT;
        
        hp         = 4;
        canGetHurt = true;
        toggle     = true;
        shake      = false;
        dir        = 0;
        dirTarget  = 0;
        width      = 1;
        
        alarm[0]   = -1;
        alarm[1]   = -1;
        alarm[2]   = -1;
        alarm[3]   = -1; 
        alarm[4]   = -1;
        alarm[5]   = -1;   
    }
    
    
///////////////////////////////////////////////////////////////////////////////    

    // Reset enemy spawns
    with (oEnemySpawner) {
        if (!instance_exists(spawn)) {
            spawn           = instance_create(x, y, oEnemyPatrol);
            spawn.facing    = facing;
            spawn.val       = 0.5;
            spawn.triggerID = triggerID;
        } else {
            if (true/*reset*//*) {
                with (spawn) {
                    x      = other.x;
                    y      = other.y;
                    facing = other.facing;
                    val    = 0.5;
                }
            }
        }
    }
    
    
    // Obstacles
    with (oTriggerV) {
        x = xstart;
        y = ystart;
        
        move = false;
        vy   = 0;
    }  
    
    with (oZoneMoverH) {
        x  = xstart;
        vx = vxstart;
    }
    
    // Turret
    with (oMissileSpawner) {
        init = false;
        alarm[1] = 20;
    }
    
    with (oTurret) {
        alarm[0] = initialDelay;    
    }
    
    // Get rid of live ammo
    with (oMissile)
        instance_destroy();
    with (oTurretBullet)
        instance_destroy();
    
    // Reset lock&amp;key
    with (oLockBlock) {
        x = xstart;
        y = ystart;
    }
    with (oKey)
        visible = true;
        
    with (oSwitchBlock)
        key = isSwitchInit;
        
    // Reset coin
    with (oCoin)
    {
        x = xstart;
        y = ystart;
    }
    
    // Reset Crusher sounds
    with (oTriggerV)
        hasPlayedSound = false;
        
    with (oCrusherV)
        hasPlayedSound = false;
        
    // Reset leaderboard settings
    
///////////////////////////////////////////////////////////////////////////////

    */

    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
