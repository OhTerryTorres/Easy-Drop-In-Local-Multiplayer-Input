<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables

locked          = false;
camFollowTarget = noone;

// Follow player
if (instance_exists(o_player))
    camFollowTarget = o_player;
else
    instance_destroy();
    
tx = 0;
ty = 0;

zone = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(camFollowTarget)) {          
    // Make sure player is inside box
    if (!locked) {
        x = max(camFollowTarget.bbox_right   - (sprite_width  * 0.5), min(x, camFollowTarget.bbox_left  + (sprite_width   * 0.5)));
        y = max(camFollowTarget.bbox_bottom  - (sprite_height * 0.5), min(y, camFollowTarget.bbox_top   + (sprite_height  * 0.5)));
    }
           
    // Approach      
    var DUM = 8//4;

    if (!locked) {
        // Move with player
        view_xview[0] = scr_approach(view_xview[0], x - view_wport[0] * 0.5, abs(view_xview[0] - (x - view_wport[0] * 0.5)) / DUM);
        view_yview[0] = scr_approach(view_yview[0], y - view_hport[0] * 0.5, abs(view_yview[0] - (y - view_hport[0] * 0.5)) / DUM);
    } /*else {
        
        DUM = 8;
        
        view_xview[0] = scr_approach(view_xview[0], tx, abs(view_xview[0] - (tx)) / DUM);
        view_yview[0] = scr_approach(view_yview[0], ty, abs(view_yview[0] - (ty)) / DUM);        
    }*/
            
    // Make sure camera is inside room
    view_xview[0] = max(0, min(view_xview[0], room_width  - view_wport[0]));
    view_yview[0] = max(0, min(view_yview[0], room_height - view_hport[0]));              
    
    // Adjust for screenshake
    if (instance_exists(o_game)) {
        view_xview[0] += o_game.xcamo;
        view_yview[0] += o_game.ycamo;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
with (o_player) {
    if (place_meeting(x, y, oCameraBounds)) {
        var cambound = instance_place(x, y, oCameraBounds);
        
        // The last zone you were in
        other.zone = cambound;        
        
        other.locked = true;
        other.tx     = cambound.tx;
        other.ty     = cambound.ty;
    } else {
        if (other.locked) {
            if (((bbox_bottom - other.zone.bbox_top) &lt; -32) || ((bbox_top - other.zone.bbox_bottom) &gt; 32) || ((bbox_right - other.zone.bbox_left) &lt; -32) || ((bbox_left - other.zone.bbox_right) &gt; 32))
                other.locked = false;
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
