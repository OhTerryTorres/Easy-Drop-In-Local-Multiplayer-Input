<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize pause menu

input = instance_create(0, 0, o_input);

// Menu Index
menu_index = 0;
dog_index_0 = 0;
dog_index_1 = 1;

// Display Options
title = "FETCH";

dogs[0] = "Brother";
dogs[1] = "Sunny";
dogs[2] = "Maestro";
dogs[3] = "Nina";

options[0] = "START"
options[1] = "Dog 1: " + string(dogs[dog_index_0]);
options[2] = "Dog 2: " + string(dogs[dog_index_1]);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu alarm
// mostly for gamepads
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control the menu

if alarm[0] &lt;= 0 {
    if input.key_down or input.yaxis &gt; .5 {
        if menu_index &lt; array_length_1d(options) - 1 {
            menu_index++;
        } else {
            menu_index = 0;
        }
        alarm[0] = room_speed/6;
    }
    
    if input.key_up or input.yaxis &lt; -.5 {
        if menu_index &gt; 0 {
            menu_index--;
        } else {
            menu_index = array_length_1d(options) - 1;
        }
        alarm[0] = room_speed/6;
    }
    
    if input.key_jump {
        switch menu_index {
            // Return
            case 0:
                alarm[0] = -1;
                with o_game_controller {
                    //scr_create_player(0, o_menu.dog_index_0);
                    //scr_create_player(1, o_menu.dog_index_1);
                }
                o_game_controller.players[0].dog_index = dog_index_0;
                o_game_controller.players[1].dog_index = dog_index_1;
                room_goto_next();
                break;
            // Save
            case 1:
                dog_index_0 += 1;
                break;
            // Load
            case 2:
                dog_index_1 += 1;
                break;
            // Quit
            case 3:
                game_end();
                break; 
            default:
                break;
        }
        input.key_jump = false;
    }
       
}

// Set Dog Indices

if dog_index_0 &gt; array_length_1d(dogs) - 1 {
    dog_index_0 = 0;
}
if dog_index_1 &gt; array_length_1d(dogs) - 1 {
    dog_index_1 = 0;
}

options[1] = "Dog 1: " + string(dogs[dog_index_0]);
options[2] = "Dog 2: " + string(dogs[dog_index_1]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the menu

var xx = display_get_gui_width()/2;
var yy = display_get_gui_height()/2;

draw_set_halign(fa_center);
draw_text(xx, yy-64, title);

for (var i = 0; i &lt;= array_length_1d(options) - 1; i++) {
    draw_set_colour(c_gray);
    if i == menu_index {
        draw_set_colour(c_white);
    }
    draw_text(xx, yy + (i * 32), options[i]);
}
draw_set_colour(c_white);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
